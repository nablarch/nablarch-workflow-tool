group = 'com.nablarch.workflow'
version = '1.0.0'
description = 'ワークフロー定義データ自動生成ツール'

buildscript {
  repositories {
    mavenLocal()
    maven { url "${developLibUrl}" }
    jcenter()
  }
  dependencies {
    classpath "com.nablarch.dev:nablarch-gradle-plugin:${nablarchGradlePluginVersion}"
    classpath "net.saliman:gradle-cobertura-plugin:2.2.3"
    classpath "io.spring.gradle:dependency-management-plugin:0.5.3.RELEASE"
  }
}

repositories {
  mavenLocal()
  maven { url "${developLibUrl}" }
  jcenter()
  
  // サードパーティ製ライブラリの格納リポジトリ
    if(project.hasProperty('nablarchExtRepoUrl')) {
       maven { url "${nablarchExtRepoUrl}" }
  }
}

apply {
  plugin 'com.nablarch.dev.nablarch-sonarqube'
  plugin 'com.nablarch.dev.nablarch-build'
  plugin 'com.nablarch.dev.nablarch-maven-deploy'
  from 'https://github.com/nablarch/nablarch-gradle-plugin/blob/develop/scripts/cobertura/cobertura-0.0.1.gradle?raw=true'
  plugin "io.spring.dependency-management"
}

test {
  maxParallelForks 8
  jvmArgs '-Xmx512m'
}

dependencyManagement {
  imports {
    mavenBom 'com.nablarch.profile:nablarch-bom:5u10'
  }
  applyMavenExclusions false
}

dependencies {
  compile 'com.nablarch.workflow:nablarch-workflow:1.1.0'
  compile 'com.nablarch.framework:nablarch-core-repository'
  compile 'org.apache.poi:poi-ooxml:3.8'
  
  testCompile 'junit:junit:4.12'
  testCompile 'org.hamcrest:hamcrest-all:1.3'
  testCompile 'com.nablarch.tool:nablarch-toolbox'
}

task wrapper(type: Wrapper) {
  gradleVersion = '2.13'
}
